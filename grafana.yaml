apiVersion: v1
kind: Secret
metadata:
  name: grafana-username
  namespace: app-namespace
type: Opaque
data:
  username: Z3JhZmFuYS1kZXZvcHMtdXNlcg==

---

apiVersion: v1
kind: Secret
metadata:
  name: grafana-password
  namespace: app-namespace
type: Opaque
data:
  password: Z3JhZmFuYS1kZXZvcHMtcGFzc3dvcmQ=

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: app-namespace
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: app-namespace
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        env:
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana-password
                key: password
          - name: GF_SECURITY_ADMIN_USER
            valueFrom: 
              secretKeyRef:
                name: grafana-username
                key: username
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 3000
          name: grafana-port
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
    

      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc


---

apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: app-namespace
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: grafana-port

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: app-namespace
  labels:
    name: grafana
spec:
  ingressClassName: nginx
  rules:
  - host: grafana.example.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: grafana-service
            port: 
              number: 3000

